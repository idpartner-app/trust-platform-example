version: '3.8'

services:
  db:
    image: postgres:14.3
    volumes:
      - ${PG_DATA_OVERRIDE-/tmp/idpartner/pg_data}:/var/lib/postgresql/data
      - ./scripts/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: welcome1

  redis:
    image: redis:6.2.6
    restart: always
    ports:
      - "6379:6379"

  # authorization-adapter-service:
  #   image: 535716075523.dkr.ecr.us-west-2.amazonaws.com/idpartner-authorization-adapter-service:development 
  #   restart: always
  #   ports:
  #     - "9102:9102"
  #   environment:
  #     # Common non-auth config
  #     - AUTHORIZATION_ADAPTER_URL: http://localhost:9102
  #     - COOKIE_DOMAIN: localhost
  #     # - COOKIE_MAX_AGE_IN_SECONDS: 600
  #     - COOKIE_SECRET: CHANGE_ME
  #     - OIDC_SERVICE_URL: http://localhost:9001
  #     # - PORT: 9102
  #     - REDIS_HOST: localhost
  #     # - REDIS_PORT: 6379
  #     - SENTRY_DSN: https://xxx@yyy.ingest.sentry.io/000

  #     - # (Common) Auth config
  #     - OAUTH_PROTOCOL: oidc
  #     - OAUTH_URL: http://localhost:9101
  #     - OAUTH_CLIENT_ID: foo
  #     - OAUTH_CLIENT_SECRET: bar
  #     # - OAUTH_PKCE_ENABLED: true

  #     # (OAuth2) Auth config - Specify config below only if using OAuth2
  #     # - OAUTH_USERINFO_PATH: /me
  #     # - OAUTH_TOKEN_PATH: /token
  #     # - OAUTH_AUTHORIZATION_PATH: /auth
  #   depends_on:
  #     - redis

  oidc-provider-service:
    image: 535716075523.dkr.ecr.us-west-2.amazonaws.com/idpartner-oidc-provider-service:development 
    restart: always
    ports:
      - "9001:9001"
    environment:
      # Common config
      BASE64_JWKS: eyJrZXlzIjpbeyJrdHkiOiJSU0EiLCJraWQiOiItTV85dnFKaTB0U1lEZVhGaDNjbHZaNzBudEJvc1VWVDlhcUItLTJTUWlVIiwidXNlIjoic2lnIiwiYWxnIjoiUFMyNTYiLCJlIjoiQVFBQiIsIm4iOiJ4WEdlcUZLNzFtT0dVZFNTcVdyMi1EUzJvQ3l3Y081VExoTEM3UUZsZC1yeDZMUS0tcW1xdTd1UWdpRk85YUZsMDFNSVpGX2hzN0QxUkdYMUVtQjVvZFA5OHZxRlZ2cEJ2eTNTc2U2Vlp0TWNjS0Z0dnl3TnNmV0xHUnd5ZHpHdzlCMnM0eVd5NUFSUDJ3N2ZnMVgzVG5aZ3RPanRpbHd2SjFRQ1hXajNBc2hYY0ZqOU1uNjJ6N2lQblVjWVpDdXBkeUpPYmFDVGNuY2xMQmZVU2s0QWlma0d2eXFHcGxmRHBmZWJMY0pXTU9VZDRtbS1IdjJxZDlvOTVXaENmbXNFQUxpczh0Z3hrWFRqQVVJclMxN0Z3NC1NSUVEV0ZEREVuOWJYUWt6SjJ2WUdvS2tsTjVrOV82eTNwVzk1WUlYODF2dkFFaUxlUkltV0ktMXE3a2E1cnciLCJkIjoicmJ2YmNwdFNJMFJ4MWFGcDU5OXlMMWNhOTNnN1RUTzRSNHRFc0EyUmZtSml1SE9hRXpDbVJnaTJFSHRFb2tpQmMtRFZPcFZQNGJDdE1LRlNjdmduTHVsOXhJY0NPMVY3OHNCY2JDcldsYUxmbkktX0pQLWJrV0xSSWFnNUU3N0t5Uk12cExQd1pFa1RCMXRmLTQzeVRiMUdQUW5Vc3ZHSW9GLUFzVGNDV3hQbmIyZkdRSWlfdWllb010dlZsSmw5eXNoX0FZWGQ1ajRpN3Q4MGtBdnVKN2VxRmpSX3JXRmxXc3Y3MW5DeVA2UURTMlpqYU1oLWpDMUE4cmIzZjF1bFdSOVJOQVVWMTRrRlVmMTA2SzQ2dUtsX21ic1RMWXRRRTktQWE3N0VyZ19qQ0gzQ05odzBEWHNJUVVJNmxrdXVJVWNnRTJsdmU0SGdyMTZYYmQtM0VRIiwicCI6IjhsWEZXQm1oNk1LUzkxNUhqQnFRa0czVGhOODB6ZzB5X3VjNnBnU0hqWFRiVzVkTHBoSXVZVkVRM3pWYXJoMXVXZFlUUmxCUl9oUzFlWnJIQXhfajhBNU5vWjByU3JaYWV2SUtXZDZzOUlnYm84bjlOUlAzeXA2dUN5Q01vWWRXeHg3VEVPZE1IUU05d3VaWWNTVkI0OEpRczVUeUNFZUY2eG1VOHdBblRnayIsInEiOiIwSlBTU2dQWTBscDdXd2oxYnZFanVVc05YdnVBNkxmcng4ZGtQQ3plWHphOVkteHl3QTZma244NmRNNkpJbkY4bW8td1NNeUxhNmphd2t0Q3VKTFFGNUlIanYwcDZyOFIyQUFUbnVEYUtnWFVhRkRqdi01WDZVSThsUHRIYW9SZktZV3RXYXRNM2NBSVBiczY1dmhYdU41TzIwN3NIS0tqU2wxM0oxZUN0X2MiLCJkcCI6InhUd0I3bjZPUkw5NGxsVHBycUpBWHd6RVJ6VFQ2WkRjbkpMZUxSa3FxbnNkdmlJWnRBVEFNdnlqMnNlMkVsaHA1RHhVVzdvcndieGhKNlJOcmNGYTU1cjhuRGtyYnhlVDlOVGlqOXFvc2kzRk1UM0pGRlk0SzNXUy1nTjM4bEFRMU9mRnFkQlhKcFhvd3FSdl8wYnZwY3dWbXRQeldjRzh3V2lFem5LbGl1RSIsImRxIjoiV1RIOXliMGZhY1ZiM3pCVGxOXzJRUFVCZ003WTc2eEhYaVc4amFjNmFVbEZjSWZiQXBxLVRxMnQxLW5DNTBIVTRWdjFMUXlieXF4bzhKR3l0S19ENFhDSFh2U1FpbHl2U3NtdG1sSFp1Z0xJTk52eXFVOUp0T3lvYjZXTmd0V2N4R3J3R05xU2dubnVqRWVYQnRMSTRMdmd5UlJWRUdIVXBxYVZuX05pYVQwIiwicWkiOiJ4YXBuMlBQOHI5VmpQY2Q2Rk9JYllkZWVoNC1HbGY2eHl6Q3FKbGZpcFFPd1IwX2FFQjY0UlNiMHF4cFA2VDJ3SUZFQWRoaGVJS3gzOVR2R3g1Qm5SbXFKejlFZmViN19CX3NHV0ZMSnVjVzU0N0RLNXhmT3hMbVhRZC1rWGNtS0tvYzZnZzBIMUhxcUR0dHhtbG9GT0MzTlhmYmp4RDFZRi1uaThrZ05qT0EifSx7Imt0eSI6IlJTQSIsImtpZCI6InNHMFNza3F5aUE2SVdtMEhiM1ZobUw4VFVxU0l4X01xbmNiM0NKTm02M2MiLCJ1c2UiOiJlbmMiLCJhbGciOiJSU0EtT0FFUCIsImUiOiJBUUFCIiwibiI6IjRMZGdEQ3pJcUlWMHEyTzQyQjhyWE03V3VsWUozZ1FXSkdwRWxXSTR0YVhiNzFqUExoYnVWcGhJZ2dtcUZtVGVqVmtLR3NPVmllWm9OOENIQmtYUXE3Sm1GWGJETEhIenFZOXVoSXNKYk5QNmkteFJiLXJuTlB6Tnk3VnM1STB0cE5CeWkzMHpRbHV5Tzh6MFEzTFlLMWdPdnhBRUQzakFXZm1wY0lPMWtqbEdSeGpXZXFsM1R0NnVjM2pidDNtcWVUc3FiN1k1am5PMGVlN29IY25jV2lRdnVmY0dUYU9hN051c2ZUQ0FjVHBXc3hvVEQzQ2JtUmFWWFcwVkVScE5relhQcHFsczNKbmVkMDFvREk5RjRMa0NuMDNtRDJzck5Vbk1FbGYwQVdUX2ZKMFpsZWxCVG1aUWhWOEx1eHlvaW85RGpKRExLeGY2N0N5cko2VlUzUSIsImQiOiJub2xBdmRZcWlwbjh3WjNOSHN4LXJ5OU4xcEEwemVsY0piekRQaERacVcybVNLb0RJS1VVNlFydXZLOU16QmZGMnpyaUloZXlQR1BOU3VnTldxT09vRk53S2R4cnZjTjNBRDBzMzEybl9KdGd1NjZ4bFpfSUZsMzBZcTlRYjc0YVlaaWQ5ME1SRXRQV1h0SXQwaGdINGl4eDJ1SFZ1NFNaVC1FUFpVM0duNjF0anlNeS1Eb1ZqcFpvMUdCdFRQRzRQZmh6TC1PM2YwNFYyd2VGTkR2ckstQUFST0ZqS1lmbkh3US1IQWVRRXc1M0RjdmdfcUxJVXB6aHZSS3FEZmxVZ3hUYzdrd0VHTVRKRHNYUkdoZ2N4WHZjU2hGb1UyQ3BPekZpZDZoeFhEakZoNjhBTG43NmM4QmM4WG9CTU56cFNNYkhSX2NCaWRFVVFyeGVsVzBzQVEiLCJwIjoiX3k3SjFuSFFXUnVtNVpZQ1NsYUNNME4tUXpsZzVtX0YzaWM2U1puVHlQRTJ3OERLMHJaUnZ3ejNqYm5EVnVDdmtGc2UtWDhMSWVIUGNkVHRVa29Ic1YyTTVRekh0a1VRdndZVjBHNzVEb1MyUU95OFNhbVJoUnFDZ3Byemp5YjhycnVxekJhQjBTeV9YX2pPX2lwMklyV3FobnlYZzlHNnY2REVnQnpCc1IwIiwicSI6IjRXLWIzSTdQbTE5aE5BVXFqSndKN2czQ0g1NlFkaExYLWh0YUdpU0xjS3hOemtleWx6elBKR21zTVRBNkFHdzA0RWJTbVdmNm1UN3gtdzh5UmNDOTh4ejFRZ1ZiWml2REkzUU82SkJ5WGJ0VU9mMmR6UUczajVUbjhlbWNqY0ZrTldDUENoNFNVaWF2bzhFZnVzTkVkd3pRb09YblNXMG1Pbi1QWjk3LXBzRSIsImRwIjoiN3ExaWw3TW9mdEFBVUtqNFIzT1dvRUEycnNYU1BuYTVDY3FER0NoTEVKMmM3WWM3cmM1ZHMyWjdmUklOQlF0dTZvUnYta2k3cnRzNFhtNGI4MlhPd0RTUl9nTHdJU21FT2tlRXk4bWdKZFkzYVk2RHBocDJRNXJDQzBySEdGUU03NW9VYklONHRKODMtSm9OY1dsaHlhRkZlRGk4dHN6SjhVWjd4S0FoQW5rIiwiZHEiOiI0S3pfUlozX1F2YVlSZVF3TjlyNy1va3p3NWVnbWt6RmU3cnUzY2MyUWFFNEdqSlN4M0FQY2xidkNrYnFSNm1RT1VYY2RvLXVyalNScm9uQ3JNb2ZoY0NDbnI0QURaX241OW12VWhGRUtpNmREdjY0MnF5dmFTWWExSHJqVUZSQnJ3RUJEakJTU2hYTVR3UVd2MmdGUURGQmJGbzFYSFN2LVBWUTAxRG5zd0UiLCJxaSI6IjVLaUktOFZxTjMxbnFVRmNpLXF5LVBfZE16Y3ZiYTZHUHhWSVU5ak1VS1dNaWg3ZldZSHFSM3ZCMU9pX2k0cXVfZHJXdF9rYllxM0podmtGd2ctRmEySHNZWktWMVpDMjF4WnlObVcxd3owamtwblQ2UnI0anIteGN0NXh5Mmg3ejloWjBpQ1luazNHXzd1WDg3eG1JWGJTRlpPMlVOQzlWRW1TOWF3eTlVRSIsImVuYyI6IkEyNTZDQkMtSFM1MTIifV19
      IDENTITY_PROVIDER_UUID: 5b04dca2-24e0-456b-87c7-439c846c27af
      OIDC_COOKIES_KEYS: CHANGE_ME
      OIDC_SERVICE_URL: http://localhost:9001
      # PORT: 9001

      # Database Config
      SQL_DATABASE: idpartner
      SQL_HOST: localhost
      SQL_PASSWORD: postgres
      SQL_USER: postgres
      PGSSLMODE: disable

      # Redis Config
      REDIS_HOST: localhost
      # REDIS_PORT: 6379

      # Session Config
      COOKIE_DOMAIN: localhost
      COOKIE_SECRET: secret
      # COOKIE_MAX_AGE_IN_SECONDS: 600

      # Error Reporting Config
      SENTRY_DSN: https://xxx@yyy.ingest.sentry.io/000

      # IDPartner Services Config
      # BROKER_SERVICE_URL: http://localhost:9002
      # EVENT_SERVICE_URL: http://localhost:9005
      # EVENT_SERVICE_AUTH_TOKEN_TTL_IN_SECONDS: 30
      # TRUST_MANAGEMENT_SERVICE_URL: http://localhost:9004
      # TRUST_MANAGEMENT_SERVICE_TTL_IN_SECONDS: 30

      # IDP Services Config
      # AUTH_SERVICE_URL: https://idpartner-trust-network3.ngrok.io
      # TRUSTED_PACKAGE_VERIFICATION_API_AUTH_TOKEN_TTL_IN_SECONDS: 60
      # TRUSTED_PACKAGE_VERIFICATION_API: http://localhost:9100/v1/trusted-packages/verify
      # TRUSTED_PACKAGE_VERIFICATION_ENABLED: true
    depends_on:
      - db
      - redis